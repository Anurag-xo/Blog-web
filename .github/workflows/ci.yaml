name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: anuragox/blog_web
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Deploy MongoDB
        run: |
          kubectl apply -f k8s/manifests/mong-deployment.yaml
          kubectl apply -f k8s/manifests/mongo-service.yaml
          
          echo "Waiting for MongoDB to be ready..."
          kubectl wait --for=condition=ready pod -l app=mongo --timeout=120s || true
          
          echo "MongoDB Pod Status:"
          kubectl get pods -l app=mongo
          kubectl describe pods -l app=mongo

      - name: Test MongoDB Connectivity
        run: |
          echo "MongoDB Service Status:"
          kubectl get svc mongo
          
          echo "Testing MongoDB DNS resolution..."
          kubectl run test-dns --rm -it --image=busybox --restart=Never -- nslookup mongo || true
          
          echo "Testing MongoDB connectivity..."
          kubectl run test-mongo --rm -it --image=busybox --restart=Never -- nc -zv mongo 27017 || true

      - name: Deploy Blog Web
        run: |
          kubectl apply -f k8s/manifests/deployment.yaml
          kubectl apply -f k8s/manifests/service.yaml
          
          echo "Waiting for blog-web to be ready (max 2 minutes)..."
          timeout 120s bash -c 'until kubectl get pods -l app=blog-web -o jsonpath="{.items[0].status.phase}" | grep -q "Running"; do 
            echo "Waiting for pod to be running..."
            kubectl get pods -l app=blog-web
            kubectl describe pods -l app=blog-web
            sleep 10
          done'

      - name: Debug Deployment Status
        if: always()
        run: |
          echo "=== All Resources ==="
          kubectl get all
          
          echo "=== MongoDB Logs ==="
          kubectl logs -l app=mongo --tail=100 || true
          
          echo "=== Blog Web Pod Status ==="
          kubectl get pods -l app=blog-web
          
          echo "=== Blog Web Logs ==="
          kubectl logs -l app=blog-web --all-containers=true || true
          
          echo "=== Events ==="
          kubectl get events --sort-by='.lastTimestamp'

      - name: Verify Services
        if: success()
        run: |
          echo "=== Service Endpoints ==="
          kubectl get endpoints
          
          echo "=== Testing Blog Web Service ==="
          # Try to access the service internally
          kubectl run curl-test --image=curlimages/curl --rm -it --restart=Never -- curl -v http://blog-web-service || true