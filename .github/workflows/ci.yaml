name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: anuragox/blog_web
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

      - name: Set up Minikube
        uses: medyagh/setup-minikube@master

      - name: Setup Kubernetes tools
        run: |
          minikube status
          kubectl get nodes

      - name: Deploy MongoDB
        run: |
          echo "Deploying MongoDB..."
          kubectl delete deployment mongo --ignore-not-found
          kubectl delete service mongo --ignore-not-found
          kubectl apply -f k8s/manifests/mong-deployment.yaml
          kubectl apply -f k8s/manifests/mongo-service.yaml
          
          echo "Waiting for MongoDB pod..."
          kubectl wait --for=condition=ready pod -l app=mongo --timeout=180s
          
          echo "MongoDB Pod Details:"
          kubectl get pods -l app=mongo -o wide
          kubectl describe pods -l app=mongo

      - name: Verify MongoDB
        run: |
          echo "MongoDB Service Details:"
          kubectl get svc mongo -o wide
          
          echo "MongoDB Logs:"
          kubectl logs -l app=mongo
          
          echo "Testing MongoDB connection..."
          kubectl run test-mongo --rm -i --restart=Never --image=busybox:1.28 -- nc -zv mongo 27017

      - name: Deploy Blog Web
        run: |
          echo "Deploying blog-web..."
          kubectl delete deployment blog-web --ignore-not-found
          kubectl delete service blog-web-service --ignore-not-found
          
          kubectl apply -f k8s/manifests/deployment.yaml
          kubectl apply -f k8s/manifests/service.yaml
          
          echo "Waiting for blog-web deployment..."
          for i in {1..30}; do
            echo "Attempt $i: Checking pod status..."
            kubectl get pods -l app=blog-web
            if kubectl wait --for=condition=ready pod -l app=blog-web --timeout=10s; then
              echo "Pod is ready!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Pod failed to become ready"
              kubectl describe pods -l app=blog-web
              kubectl logs -l app=blog-web --all-containers=true
              exit 1
            fi
            sleep 5
          done

      - name: Debug Info
        if: always()
        run: |
          echo "=== All Resources ==="
          kubectl get all
          
          echo "=== MongoDB Status ==="
          kubectl get pods -l app=mongo -o wide
          kubectl logs -l app=mongo
          
          echo "=== Blog Web Status ==="
          kubectl get pods -l app=blog-web -o wide
          kubectl logs -l app=blog-web -c wait-for-mongo || true
          kubectl logs -l app=blog-web -c blog-web || true
          
          echo "=== Events ==="
          kubectl get events --sort-by='.lastTimestamp'