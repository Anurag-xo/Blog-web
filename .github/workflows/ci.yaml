name: CI Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'helm/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'helm/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install kubeval
      run: |
        wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
        tar xf kubeval-linux-amd64.tar.gz
        sudo mv kubeval /usr/local/bin

    - name: Validate Kubernetes manifests
      run: |
        kubeval --kubernetes-version 1.24.0 \
                --strict \
                --ignore-missing-schemas \
                --schema-location https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master \
                k8s/manifests/*.yaml

    - name: Validate with kubectl
      run: |
        for file in k8s/manifests/*.yaml; do
          echo "Validating $file"
          kubectl create --dry-run=client -f "$file" -o yaml > /dev/null
        done

    - name: Lint Kubernetes manifests
      uses: azure/k8s-lint@v1
      with:
        manifests: |
          k8s/manifests/deployment.yaml
          k8s/manifests/ingress.yaml
          k8s/manifests/mongo-deployment.yaml
          k8s/manifests/mongo-service.yaml
          k8s/manifests/service.yaml

  security-scan:
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v4

    - name: Run Kubesec scan
      uses: controlplaneio/kubesec-action@master
      with:
        input: k8s/manifests/*.yaml
        format: human
        exit-code: "0"

    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        hide-progress: false
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        scan-ref: 'k8s/manifests/'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [validate, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
    
    - name: Check cluster connection
      run: kubectl cluster-info

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        kubectl apply -f k8s/manifests/ --namespace=staging
        
    - name: Verify deployment
      run: |
        echo "Verifying deployments..."
        kubectl wait --for=condition=available --timeout=300s deployment/blog-web -n staging
        kubectl wait --for=condition=available --timeout=300s deployment/mongo -n staging

    - name: Deployment Status
      if: always()
      run: |
        echo "Checking deployment status..."
        kubectl get deployments -n staging
        kubectl get pods -n staging
        kubectl get services -n staging
        kubectl get ingress -n staging