name: CI/CD Pipeline

on:
  push:
    branches:
      - feature

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} .

      - name: Configure AWS CLI
        run: |
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} ${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest
            docker-compose down
            docker-compose up -d
          "
